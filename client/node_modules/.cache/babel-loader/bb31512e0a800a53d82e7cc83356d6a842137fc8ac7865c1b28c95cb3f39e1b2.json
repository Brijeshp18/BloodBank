{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brije\\\\OneDrive\\\\Desktop\\\\Blood Bank\\\\client\\\\src\\\\pages\\\\Login\\\\Otpform.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Row, Col } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPForm = () => {\n  _s();\n  const [countdown, setCountdown] = useState(60); // Initial countdown time in seconds\n  const [isResendDisabled, setIsResendDisabled] = useState(false);\n  useEffect(() => {\n    // Start the countdown timer when the component mounts\n    let timer;\n    if (countdown > 0) {\n      timer = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n    } else {\n      setIsResendDisabled(false); // Enable the resend button when the countdown reaches 0\n    }\n\n    // Clean up the timer when the component unmounts or when the countdown reaches 0\n    return () => {\n      clearInterval(timer);\n    };\n  }, [countdown]);\n  const onFinish = values => {\n    // Handle OTP submission here, e.g., send data to the server\n  };\n  const handleResendOTP = () => {\n    // Handle OTP resend logic here\n    // Disable the resend button and reset the countdown timer\n    setIsResendDisabled(true);\n    setCountdown(60); // Reset the countdown to 60 seconds\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"otp\",\n    onFinish: onFinish,\n    className: \"bg-white rounded shadow  p-4 gap-3 w-1/3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"otp\",\n      label: \"OTP\",\n      rules: [{\n        required: true,\n        message: 'Please input your OTP'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 8,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleResendOTP,\n          disabled: isResendDisabled,\n          block: true,\n          children: isResendDisabled ? `Resend OTP in ${countdown} seconds` : 'Resend OTP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPForm, \"S448EgGTjWIAeHp3mgHhKAeGj1Y=\");\n_c = OTPForm;\nexport default OTPForm;\nvar _c;\n$RefreshReg$(_c, \"OTPForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Input","Button","Row","Col","jsxDEV","_jsxDEV","OTPForm","_s","countdown","setCountdown","isResendDisabled","setIsResendDisabled","timer","setInterval","prevCountdown","clearInterval","onFinish","values","handleResendOTP","name","className","children","Item","label","rules","required","message","fileName","_jsxFileName","lineNumber","columnNumber","gutter","span","type","htmlType","onClick","disabled","block","_c","$RefreshReg$"],"sources":["C:/Users/brije/OneDrive/Desktop/Blood Bank/client/src/pages/Login/Otpform.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\n\r\nconst OTPForm = () => {\r\n  const [countdown, setCountdown] = useState(60); // Initial countdown time in seconds\r\n  const [isResendDisabled, setIsResendDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Start the countdown timer when the component mounts\r\n    let timer;\r\n    if (countdown > 0) {\r\n      timer = setInterval(() => {\r\n        setCountdown((prevCountdown) => prevCountdown - 1);\r\n      }, 1000);\r\n    } else {\r\n      setIsResendDisabled(false); // Enable the resend button when the countdown reaches 0\r\n    }\r\n\r\n    // Clean up the timer when the component unmounts or when the countdown reaches 0\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [countdown]);\r\n\r\n  const onFinish = (values) => {\r\n    // Handle OTP submission here, e.g., send data to the server\r\n  };\r\n\r\n  const handleResendOTP = () => {\r\n    // Handle OTP resend logic here\r\n    // Disable the resend button and reset the countdown timer\r\n    setIsResendDisabled(true);\r\n    setCountdown(60); // Reset the countdown to 60 seconds\r\n  };\r\n\r\n  return (\r\n    <Form name=\"otp\" onFinish={onFinish}  className=\"bg-white rounded shadow  p-4 gap-3 w-1/3\">\r\n      <Form.Item\r\n        name=\"otp\"\r\n        label=\"OTP\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your OTP',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Row gutter={8}>\r\n        <Col span={12}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Verify OTP\r\n          </Button>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Button\r\n            onClick={handleResendOTP}\r\n            disabled={isResendDisabled}\r\n            block\r\n          >\r\n            {isResendDisabled\r\n              ? `Resend OTP in ${countdown} seconds`\r\n              : 'Resend OTP'}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default OTPForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}