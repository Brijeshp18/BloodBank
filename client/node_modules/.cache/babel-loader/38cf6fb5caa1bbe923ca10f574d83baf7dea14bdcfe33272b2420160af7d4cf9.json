{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brije\\\\Documents\\\\bloodbankgit\\\\BloodBank\\\\client\\\\src\\\\pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form, Input, Radio, message } from \"antd\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { LoginUser } from \"../../Apicall/users\";\nimport OTPForm from './Otpform';\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [type, settype] = useState(\"donar\");\n  const [form] = Form.useForm();\n  const Navigate = useNavigate();\n  const dispatch = useDispatch();\n  const onFinish = async values => {\n    console.log(\"form datas\", values);\n    try {\n      dispatch;\n      const response = await LoginUser({\n        ...values,\n        userType: type\n      });\n      if (response.success) {\n        message.success(response.message);\n        localStorage.setItem(\"token\", response.data);\n        Navigate(\"/\");\n      } else {\n        throw new Error(response.message);\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  const onFinishFailed = errorInfo => {\n    // Handle form validation failures\n    console.log(\"Failed:\", errorInfo);\n  };\n  form.resetFields();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bgc\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        onFinish: onFinish,\n        form: form,\n        onFinishFailed: onFinishFailed,\n        layout: \"vertical\",\n        className: \"bg-white rounded shadow grid p-4 gap-3 w-1/3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"uppercase text-xl text-red-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-l ms-2 me-3 text-white  bg-red-500\",\n            children: \"RED CROSS \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this), \"   \", type.toUpperCase(), \" - Login\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Group, {\n          onChange: e => settype(e.target.value),\n          value: type,\n          children: [/*#__PURE__*/_jsxDEV(Radio, {\n            value: \"donar\",\n            children: \"Donar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Radio, {\n            value: \"hospital\",\n            children: \"Hospital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Radio, {\n            value: \"organization\",\n            children: \"Organization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), type !== 'donar' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            normalize: value => value.trim(),\n            rules: [{\n              required: true,\n              message: \"please enter your email Id\"\n            }, {\n              min: 8\n            }, {\n              type: 'email'\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            normalize: value => value.trim(),\n            rules: [{\n              required: true,\n              message: \"please enter your password\"\n            }, {\n              min: 8\n            }, {\n              max: 15\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true), type === 'donar' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(OTPForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          block: true,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \" text-center text-gray-700 underline\",\n          children: [\"Don't have an account  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"LnMzF4wQDgP7KOSJh3dgEYBPppA=\", false, function () {\n  return [Form.useForm, useNavigate, useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Form","Input","Radio","message","Link","Navigate","useNavigate","LoginUser","OTPForm","useDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","type","settype","form","useForm","dispatch","onFinish","values","console","log","response","userType","success","localStorage","setItem","data","Error","error","onFinishFailed","errorInfo","resetFields","className","children","autoComplete","layout","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","Group","onChange","e","target","value","Item","label","name","normalize","trim","rules","required","min","hasFeedback","max","htmlType","block","to","style","color","_c","$RefreshReg$"],"sources":["C:/Users/brije/Documents/bloodbankgit/BloodBank/client/src/pages/Login/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Input, Radio,message } from \"antd\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { LoginUser } from \"../../Apicall/users\";\r\nimport OTPForm from './Otpform'\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\n\r\nfunction Login() {\r\n  const [type, settype] = useState(\"donar\");\r\n  const [form] = Form.useForm(); \r\n  const Navigate= useNavigate();\r\n  const dispatch = useDispatch()\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"form datas\", values);\r\n    try {\r\n      dispatch\r\n      const response= await LoginUser({...values, userType:type})\r\n      if(response.success){\r\n      message.success(response.message)\r\n      localStorage.setItem(\"token\",response.data)\r\n      Navigate(\"/\")\r\n      }\r\n      else {\r\n          throw new Error(response.message)\r\n      }  \r\n  } catch (error) {\r\n      message.error(error.message)\r\n  }\r\n\r\n  };\r\n  \r\n  const onFinishFailed = (errorInfo) => {\r\n    // Handle form validation failures\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  form.resetFields();\r\n  return (\r\n    <div className=\"bgc\">\r\n    <div  className=\"flex h-screen items-center justify-center\">\r\n      <Form\r\n        autoComplete=\"off\"\r\n        onFinish={onFinish}\r\n        form={form}\r\n        onFinishFailed={onFinishFailed}\r\n        layout=\"vertical\"\r\n        className=\"bg-white rounded shadow grid p-4 gap-3 w-1/3\"\r\n      >\r\n        <h1 className=\"uppercase text-xl text-red-600\">\r\n        <span className=\"text-l ms-2 me-3 text-white  bg-red-500\">RED CROSS </span>   {type.toUpperCase()} - Login \r\n          <hr />\r\n        </h1>\r\n        <Radio.Group\r\n          \r\n          onChange={(e) => settype(e.target.value)}\r\n          value={type}\r\n        >\r\n          <Radio value=\"donar\">Donar</Radio>\r\n          <Radio value=\"hospital\">Hospital</Radio>\r\n          <Radio value=\"organization\">Organization</Radio>\r\n        </Radio.Group>\r\n        {type !== 'donar' && ( \r\n            <>\r\n           \r\n            <Form.Item label=\"Email\" \r\n            name=\"email\"\r\n            normalize={(value) => value.trim()}\r\n            rules={[\r\n              { required: true, message: \"please enter your email Id\" },\r\n              { min: 8 },\r\n              {type:'email'}\r\n            ]}\r\n            hasFeedback>\r\n              <Input />\r\n            </Form.Item>\r\n       \r\n            <Form.Item label=\"Password\" \r\n            name=\"password\"\r\n            normalize={(value) => value.trim()}\r\n             rules={[\r\n               { required: true, message: \"please enter your password\" },\r\n               { min: 8 },\r\n               {max:15},\r\n               \r\n             ]}\r\n             hasFeedback>\r\n              <Input type=\"password\" />\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n\r\n{type === 'donar' && ( \r\n            <>\r\n           \r\n            {/* <Form.Item label=\"Adhaar card number\" \r\n            name=\"aadharcard number\"\r\n            normalize={(value) => value.trim()}\r\n            rules={[\r\n              { required: true, message: \"please enter your Adhar number\" },\r\n              { min: 8 },\r\n            \r\n            ]}\r\n            hasFeedback>\r\n              <Input />\r\n            </Form.Item> */}\r\n       \r\n            {/* <Form.Item label=\"One Time Password (OTP)\" \r\n            name=\"OTP\"\r\n            normalize={(value) => value.trim()}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your OTP',\r\n              },\r\n            ]}\r\n             hasFeedback\r\n            >\r\n              <Input type=\"password\" />\r\n            </Form.Item> */}\r\n            <OTPForm/>\r\n          </>\r\n        )}\r\n        \r\n        \r\n     \r\n        <Button htmlType=\"submit\" type=\"primary\" block >\r\n        Login\r\n        </Button>\r\n        <Link\r\n          to=\"/register\"\r\n          className=\" text-center text-gray-700 underline\"\r\n        >\r\n         Don't have an account  <span style={{color:'red'}}>Register</span>\r\n        </Link>\r\n      </Form>\r\n    </div></div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}