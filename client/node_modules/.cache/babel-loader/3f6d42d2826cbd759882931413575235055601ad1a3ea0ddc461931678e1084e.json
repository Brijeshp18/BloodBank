{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brije\\\\OneDrive\\\\Desktop\\\\Blood Bank\\\\client\\\\src\\\\pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form, Input, Radio, message } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { LoginUser } from \"../../Apicall/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [type, settype] = useState(\"donar\");\n  const [form] = Form.useForm();\n  const onFinish = async values => {\n    console.log(\"form datas\", values);\n    try {\n      const response = await LoginUser({\n        ...values,\n        userType: type\n      });\n      if (response.success) {\n        message.success(response.message);\n      } else {\n        throw new Error(response.message);\n      }\n    } catch (error) {\n      message.error(error.message);\n    }\n  };\n  form.resetFields();\n  const onFinishFailed = errorInfo => {\n    // Handle form validation failures\n    console.log(\"Failed:\", errorInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bgc\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        onFinish: onFinish,\n        form: form,\n        onFinishFailed: onFinishFailed,\n        layout: \"vertical\",\n        className: \"bg-white rounded shadow grid p-4 gap-3 w-1/3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"uppercase text-xl text-red-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-l ms-2 me-3 text-white  bg-red-500\",\n            children: \"RED CROSS \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this), \"   \", type.toUpperCase(), \" - Login\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Group, {\n          onChange: e => settype(e.target.value),\n          value: type,\n          children: [/*#__PURE__*/_jsxDEV(Radio, {\n            value: \"donar\",\n            children: \"Donar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Radio, {\n            value: \"hospital\",\n            children: \"Hospital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Radio, {\n            value: \"organization\",\n            children: \"Organization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), type !== 'donar' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            normalize: value => value.trim(),\n            rules: [{\n              required: true,\n              message: \"please enter your email Id\"\n            }, {\n              min: 8\n            }, {\n              type: 'email'\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            normalize: value => value.trim(),\n            rules: [{\n              required: true,\n              message: \"please enter your password\"\n            }, {\n              min: 8\n            }, {\n              max: 15\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true), type === 'donar' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Adhaar card number\",\n            name: \"aadharcard number\",\n            normalize: value => value.trim(),\n            rules: [{\n              required: true,\n              message: \"please enter your Adhar number\"\n            }, {\n              min: 8\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"One Time Password (OTP)\",\n            name: \"OTP\",\n            normalize: value => value.trim()\n            //  rules={[\n            //    { required: true, message: \"please enter your password\" },\n            //    { min: 8 },\n            //    {max:15},\n\n            //  ]}\n            //  hasFeedback\n            ,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          block: true,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \" text-center text-gray-700 underline\",\n          children: [\"Don't have an account  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"yzwaN8ADxehiI7Hkor9sqV7uPm8=\", false, function () {\n  return [Form.useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Form","Input","Radio","message","Link","LoginUser","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","type","settype","form","useForm","onFinish","values","console","log","response","userType","success","Error","error","resetFields","onFinishFailed","errorInfo","className","children","autoComplete","layout","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","Group","onChange","e","target","value","Item","label","name","normalize","trim","rules","required","min","hasFeedback","max","htmlType","block","to","style","color","_c","$RefreshReg$"],"sources":["C:/Users/brije/OneDrive/Desktop/Blood Bank/client/src/pages/Login/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Input, Radio,message } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoginUser } from \"../../Apicall/users\";\r\n\r\n\r\n\r\nfunction Login() {\r\n  const [type, settype] = useState(\"donar\");\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"form datas\", values);\r\n    try {\r\n      const response= await LoginUser({...values, userType:type})\r\n      if(response.success){\r\n      message.success(response.message)\r\n      }\r\n      else {\r\n          throw new Error(response.message)\r\n      }  \r\n  } catch (error) {\r\n      message.error(error.message)\r\n  }\r\n\r\n  };\r\n  form.resetFields();\r\n  const onFinishFailed = (errorInfo) => {\r\n    // Handle form validation failures\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bgc\">\r\n    <div  className=\"flex h-screen items-center justify-center\">\r\n      <Form\r\n        autoComplete=\"off\"\r\n        onFinish={onFinish}\r\n        form={form}\r\n        onFinishFailed={onFinishFailed}\r\n        layout=\"vertical\"\r\n        className=\"bg-white rounded shadow grid p-4 gap-3 w-1/3\"\r\n      >\r\n        <h1 className=\"uppercase text-xl text-red-600\">\r\n        <span className=\"text-l ms-2 me-3 text-white  bg-red-500\">RED CROSS </span>   {type.toUpperCase()} - Login \r\n          <hr />\r\n        </h1>\r\n        <Radio.Group\r\n          \r\n          onChange={(e) => settype(e.target.value)}\r\n          value={type}\r\n        >\r\n          <Radio value=\"donar\">Donar</Radio>\r\n          <Radio value=\"hospital\">Hospital</Radio>\r\n          <Radio value=\"organization\">Organization</Radio>\r\n        </Radio.Group>\r\n        {type !== 'donar' && ( \r\n            <>\r\n           \r\n            <Form.Item label=\"Email\" \r\n            name=\"email\"\r\n            normalize={(value) => value.trim()}\r\n            rules={[\r\n              { required: true, message: \"please enter your email Id\" },\r\n              { min: 8 },\r\n              {type:'email'}\r\n            ]}\r\n            hasFeedback>\r\n              <Input />\r\n            </Form.Item>\r\n       \r\n            <Form.Item label=\"Password\" \r\n            name=\"password\"\r\n            normalize={(value) => value.trim()}\r\n             rules={[\r\n               { required: true, message: \"please enter your password\" },\r\n               { min: 8 },\r\n               {max:15},\r\n               \r\n             ]}\r\n             hasFeedback>\r\n              <Input type=\"password\" />\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n\r\n{type === 'donar' && ( \r\n            <>\r\n           \r\n            <Form.Item label=\"Adhaar card number\" \r\n            name=\"aadharcard number\"\r\n            normalize={(value) => value.trim()}\r\n            rules={[\r\n              { required: true, message: \"please enter your Adhar number\" },\r\n              { min: 8 },\r\n            \r\n            ]}\r\n            hasFeedback>\r\n              <Input />\r\n            </Form.Item>\r\n       \r\n            <Form.Item label=\"One Time Password (OTP)\" \r\n            name=\"OTP\"\r\n            normalize={(value) => value.trim()}\r\n            //  rules={[\r\n            //    { required: true, message: \"please enter your password\" },\r\n            //    { min: 8 },\r\n            //    {max:15},\r\n               \r\n            //  ]}\r\n            //  hasFeedback\r\n            >\r\n              <Input type=\"password\" />\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n        \r\n        \r\n     \r\n        <Button htmlType=\"submit\" type=\"primary\" block >\r\n        Login\r\n        </Button>\r\n        <Link\r\n          to=\"/\"\r\n          className=\" text-center text-gray-700 underline\"\r\n        >\r\n         Don't have an account  <span style={{color:'red'}}>Register</span>\r\n        </Link>\r\n      </Form>\r\n    </div></div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAACC,OAAO,QAAQ,MAAM;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIhD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACgB,IAAI,CAAC,GAAGd,IAAI,CAACe,OAAO,CAAC,CAAC;EAE7B,MAAMC,QAAQ,GAAG,MAAOC,MAAM,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,MAAM,CAAC;IACjC,IAAI;MACF,MAAMG,QAAQ,GAAE,MAAMf,SAAS,CAAC;QAAC,GAAGY,MAAM;QAAEI,QAAQ,EAACT;MAAI,CAAC,CAAC;MAC3D,IAAGQ,QAAQ,CAACE,OAAO,EAAC;QACpBnB,OAAO,CAACmB,OAAO,CAACF,QAAQ,CAACjB,OAAO,CAAC;MACjC,CAAC,MACI;QACD,MAAM,IAAIoB,KAAK,CAACH,QAAQ,CAACjB,OAAO,CAAC;MACrC;IACJ,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACZrB,OAAO,CAACqB,KAAK,CAACA,KAAK,CAACrB,OAAO,CAAC;IAChC;EAEA,CAAC;EACDW,IAAI,CAACW,WAAW,CAAC,CAAC;EAClB,MAAMC,cAAc,GAAIC,SAAS,IAAK;IACpC;IACAT,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEQ,SAAS,CAAC;EACnC,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBtB,OAAA;MAAMqB,SAAS,EAAC,2CAA2C;MAAAC,QAAA,eACzDtB,OAAA,CAACP,IAAI;QACH8B,YAAY,EAAC,KAAK;QAClBd,QAAQ,EAAEA,QAAS;QACnBF,IAAI,EAAEA,IAAK;QACXY,cAAc,EAAEA,cAAe;QAC/BK,MAAM,EAAC,UAAU;QACjBH,SAAS,EAAC,8CAA8C;QAAAC,QAAA,gBAExDtB,OAAA;UAAIqB,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC9CtB,OAAA;YAAMqB,SAAS,EAAC,yCAAyC;YAAAC,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,OAAG,EAACvB,IAAI,CAACwB,WAAW,CAAC,CAAC,EAAC,UAChG,eAAA7B,OAAA;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACL5B,OAAA,CAACL,KAAK,CAACmC,KAAK;UAEVC,QAAQ,EAAGC,CAAC,IAAK1B,OAAO,CAAC0B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UACzCA,KAAK,EAAE7B,IAAK;UAAAiB,QAAA,gBAEZtB,OAAA,CAACL,KAAK;YAACuC,KAAK,EAAC,OAAO;YAAAZ,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClC5B,OAAA,CAACL,KAAK;YAACuC,KAAK,EAAC,UAAU;YAAAZ,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxC5B,OAAA,CAACL,KAAK;YAACuC,KAAK,EAAC,cAAc;YAAAZ,QAAA,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,EACbvB,IAAI,KAAK,OAAO,iBACbL,OAAA,CAAAE,SAAA;UAAAoB,QAAA,gBAEAtB,OAAA,CAACP,IAAI,CAAC0C,IAAI;YAACC,KAAK,EAAC,OAAO;YACxBC,IAAI,EAAC,OAAO;YACZC,SAAS,EAAGJ,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAC,CAAE;YACnCC,KAAK,EAAE,CACL;cAAEC,QAAQ,EAAE,IAAI;cAAE7C,OAAO,EAAE;YAA6B,CAAC,EACzD;cAAE8C,GAAG,EAAE;YAAE,CAAC,EACV;cAACrC,IAAI,EAAC;YAAO,CAAC,CACd;YACFsC,WAAW;YAAArB,QAAA,eACTtB,OAAA,CAACN,KAAK;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAEZ5B,OAAA,CAACP,IAAI,CAAC0C,IAAI;YAACC,KAAK,EAAC,UAAU;YAC3BC,IAAI,EAAC,UAAU;YACfC,SAAS,EAAGJ,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAC,CAAE;YAClCC,KAAK,EAAE,CACL;cAAEC,QAAQ,EAAE,IAAI;cAAE7C,OAAO,EAAE;YAA6B,CAAC,EACzD;cAAE8C,GAAG,EAAE;YAAE,CAAC,EACV;cAACE,GAAG,EAAC;YAAE,CAAC,CAER;YACFD,WAAW;YAAArB,QAAA,eACVtB,OAAA,CAACN,KAAK;cAACW,IAAI,EAAC;YAAU;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA,eACZ,CACH,EAERvB,IAAI,KAAK,OAAO,iBACLL,OAAA,CAAAE,SAAA;UAAAoB,QAAA,gBAEAtB,OAAA,CAACP,IAAI,CAAC0C,IAAI;YAACC,KAAK,EAAC,oBAAoB;YACrCC,IAAI,EAAC,mBAAmB;YACxBC,SAAS,EAAGJ,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAC,CAAE;YACnCC,KAAK,EAAE,CACL;cAAEC,QAAQ,EAAE,IAAI;cAAE7C,OAAO,EAAE;YAAiC,CAAC,EAC7D;cAAE8C,GAAG,EAAE;YAAE,CAAC,CAEV;YACFC,WAAW;YAAArB,QAAA,eACTtB,OAAA,CAACN,KAAK;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAEZ5B,OAAA,CAACP,IAAI,CAAC0C,IAAI;YAACC,KAAK,EAAC,yBAAyB;YAC1CC,IAAI,EAAC,KAAK;YACVC,SAAS,EAAGJ,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAC;YACjC;YACA;YACA;YACA;;YAEA;YACA;YAAA;YAAAjB,QAAA,eAEEtB,OAAA,CAACN,KAAK;cAACW,IAAI,EAAC;YAAU;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA,eACZ,CACH,eAID5B,OAAA,CAACR,MAAM;UAACqD,QAAQ,EAAC,QAAQ;UAACxC,IAAI,EAAC,SAAS;UAACyC,KAAK;UAAAxB,QAAA,EAAE;QAEhD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5B,OAAA,CAACH,IAAI;UACHkD,EAAE,EAAC,GAAG;UACN1B,SAAS,EAAC,sCAAsC;UAAAC,QAAA,GACjD,yBACuB,eAAAtB,OAAA;YAAMgD,KAAK,EAAE;cAACC,KAAK,EAAC;YAAK,CAAE;YAAA3B,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEhB;AAACxB,EAAA,CA5HQD,KAAK;EAAA,QAEGV,IAAI,CAACe,OAAO;AAAA;AAAA0C,EAAA,GAFpB/C,KAAK;AA8Hd,eAAeA,KAAK;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}